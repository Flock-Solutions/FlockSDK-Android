name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type: patch, minor, or major'
        required: true
        default: 'patch'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 23.0.2

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version
        id: bump_version
        run: |
          FILE="flocksdk/build.gradle.kts"
          ls -l $FILE
          cat $FILE
          # Extract current version (portable)
          VERSION=$(grep 'version\s*=' $FILE | head -1 | sed -E 's/.*version\s*=\s*"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')
          echo "Extracted VERSION: $VERSION"
          if [ -z "$VERSION" ]; then
            echo "Failed to extract version from $FILE"
            exit 1
          fi
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          case "${{ github.event.inputs.release_type }}" in
            major)
              MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0;;
            minor)
              MINOR=$((MINOR+1)); PATCH=0;;
            patch|*)
              PATCH=$((PATCH+1));;
          esac
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          # Replace version in build.gradle.kts
          sed -i.bak -E "s/version\s*=\s*\"[0-9]+\.[0-9]+\.[0-9]+\"/version = \"$MAJOR.$MINOR.$PATCH\"/" $FILE
          echo "new_version=$MAJOR.$MINOR.$PATCH" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add flocksdk/build.gradle.kts
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push

      - name: Create tag and push
        run: |
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin v${{ steps.bump_version.outputs.new_version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: Release v${{ steps.bump_version.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}